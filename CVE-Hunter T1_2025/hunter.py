import subprocess
import socket
import requests
import re


def run_command(command_list):
    try:
        output = subprocess.check_output(command_list, stderr=subprocess.DEVNULL)
        return output.decode().strip()
    except subprocess.CalledProcessError:
        return ""


def hunt_cve_2023_38408():
    print("[*] CVE-2023-38408 - OpenSSH agent forwarding RCE")

    ssh_config = run_command(["cat", "/etc/ssh/sshd_config"])
    if "ForwardAgent yes" in ssh_config:
        print("[!] ForwardAgent is enabled in sshd_config — check OpenSSH version")

    ssh_version = run_command(["ssh", "-V"])
    if "OpenSSH" in ssh_version:
        print(f"[+] Detected SSH version: {ssh_version}")
        match = re.search(r"OpenSSH_([0-9]+\.[0-9]+)", ssh_version)
        if match:
            version = float(match.group(1))
            if version < 9.3:
                print("[!] Vulnerable OpenSSH version detected!")
            else:
                print("[✓] OpenSSH version appears patched.")
    else:
        print("[!] Could not detect OpenSSH version.")


def hunt_cve_2021_3156():
    print("[*] CVE-2021-3156 - sudoedit heap overflow")
    sudo_version = run_command(["sudo", "--version"])
    print(f"[+] Detected sudo version:\n{sudo_version}")
    if "1.8.31" in sudo_version or "1.9.5p1" in sudo_version:
        print("[!] Vulnerable sudo version detected!")
    else:
        print("[✓] Sudo version appears patched or unknown.")


def hunt_cve_2021_4034():
    print("[*] CVE-2021-4034 - Polkit pkexec privilege escalation")
    pkexec_version = run_command(["pkexec", "--version"])
    if pkexec_version:
        print(f"[+] pkexec version: {pkexec_version}")
    else:
        print("[!] Could not retrieve pkexec version — check manually.")


def hunt_cve_2024_8376():
    print("[*] CVE-2024-8376 - Mosquitto DoS")
    mosquitto_version = run_command(["mosquitto", "-h"])
    if mosquitto_version:
        print(f"[+] Mosquitto detected: {mosquitto_version}")
        if "version 2.0" in mosquitto_version or "v2.0" in mosquitto_version:
            print("[!] Possible vulnerable version, check exact build.")
        else:
            print("[✓] Version may not be vulnerable.")
    else:
        print("[!] Mosquitto not detected.")


hunt_map = {
    "CVE-2023-38408": hunt_cve_2023_38408,
    "CVE-2021-3156": hunt_cve_2021_3156,
    "CVE-2021-4034": hunt_cve_2021_4034,
    "CVE-2024-8376": hunt_cve_2024_8376,
}


if __name__ == "__main__":
    print("[*] Starting automated CVE-based threat hunting...\n")
    for cve_id, func in hunt_map.items():
        print(f"[🔍] Hunting for {cve_id}...")
        func()
        print("-" * 50)